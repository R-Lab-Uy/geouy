rbind(c("Secciones", "INE", "MIDES", 32721, "wfs", 2011,
"https://mapas.mides.gub.uy:443/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=INECenso:Secciones"),
c("Localidades_pg", "INE", "MIDES", 32721, "wfs", 2011,
"https://mapas.mides.gub.uy:443/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=INECenso:Localidades_pg"),
c("Asentamientos irregulares", "PMB", "MIDES", 32721, "wfs", 2014,
"https://mapas.mides.gub.uy:443/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=IDE:ai_pmb_2014"),
c("Balnearios", "MTOP", "MTOP", 4326, "wfs", 2017,
"https://geoservicios.mtop.gub.uy/geoserver/mb_planos/v_balnearios/ows?service=WFS&request=GetFeature&typeName=v_balnearios"),
c("Departamentos", "IDE", "MIDES", 32721, "wfs", 2011,
"https://testmapas.mides.gub.uy/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=IDE:Departamentos%20UY")
)
names(metadata) <- c("capa","productor","repositor","crs","formato","anio","url")
metadata <- data.frame(
rbind(c("Secciones", "INE", "MIDES", 32721, "wfs", 2011,
"https://mapas.mides.gub.uy:443/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=INECenso:Secciones"),
c("Localidades_pg", "INE", "MIDES", 32721, "wfs", 2011,
"https://mapas.mides.gub.uy:443/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=INECenso:Localidades_pg"),
c("Asentamientos irregulares", "PMB", "MIDES", 32721, "wfs", 2014,
"https://mapas.mides.gub.uy:443/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=IDE:ai_pmb_2014"),
c("Balnearios", "MTOP", "MTOP", 4326, "wfs", 2017,
"https://geoservicios.mtop.gub.uy/geoserver/mb_planos/v_balnearios/ows?service=WFS&request=GetFeature&typeName=v_balnearios"),
c("Departamentos", "IDE", "MIDES", 32721, "wfs", 2011,
"https://testmapas.mides.gub.uy/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=IDE:Departamentos%20UY")
), stringsAsFactors = FALSE
)
names(metadata) <- c("capa","productor","repositor","crs","formato","anio","url")
metadata <- data.frame(
rbind(c("Secciones", "INE", "MIDES", 32721, "wfs", 2011,
"https://mapas.mides.gub.uy:443/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=INECenso:Secciones"),
c("Localidades_pg", "INE", "MIDES", 32721, "wfs", 2011,
"https://mapas.mides.gub.uy:443/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=INECenso:Localidades_pg"),
c("Asentamientos irregulares", "PMB", "MIDES", 32721, "wfs", 2014,
"https://mapas.mides.gub.uy:443/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=IDE:ai_pmb_2014"),
c("Balnearios", "MTOP", "MTOP", 4326, "wfs", 2017,
"https://geoservicios.mtop.gub.uy/geoserver/mb_planos/v_balnearios/ows?service=WFS&request=GetFeature&typeName=v_balnearios"),
c("Departamentos", "IDE", "MIDES", 32721, "wfs", 2011,
"https://testmapas.mides.gub.uy/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=IDE:Departamentos%20UY")
), stringsAsFactors = FALSE
)
names(metadata) <- c("capa","productor","repositor","crs","formato","anio","url")
metadata %<>% mutate(crs = as.numeric(crs), anio = as.nimeric(anio))
library(magrittr)
metadata <- data.frame(
rbind(c("Secciones", "INE", "MIDES", 32721, "wfs", 2011,
"https://mapas.mides.gub.uy:443/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=INECenso:Secciones"),
c("Localidades_pg", "INE", "MIDES", 32721, "wfs", 2011,
"https://mapas.mides.gub.uy:443/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=INECenso:Localidades_pg"),
c("Asentamientos irregulares", "PMB", "MIDES", 32721, "wfs", 2014,
"https://mapas.mides.gub.uy:443/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=IDE:ai_pmb_2014"),
c("Balnearios", "MTOP", "MTOP", 4326, "wfs", 2017,
"https://geoservicios.mtop.gub.uy/geoserver/mb_planos/v_balnearios/ows?service=WFS&request=GetFeature&typeName=v_balnearios"),
c("Departamentos", "IDE", "MIDES", 32721, "wfs", 2011,
"https://testmapas.mides.gub.uy/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=IDE:Departamentos%20UY")
), stringsAsFactors = FALSE)
names(metadata) <- c("capa","productor","repositor","crs","formato","anio","url")
metadata %<>% mutate(crs = as.numeric(crs), anio = as.nimeric(anio))
library(magrittr); library(dplyr)
metadata <- data.frame(
rbind(c("Secciones", "INE", "MIDES", 32721, "wfs", 2011,
"https://mapas.mides.gub.uy:443/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=INECenso:Secciones"),
c("Localidades_pg", "INE", "MIDES", 32721, "wfs", 2011,
"https://mapas.mides.gub.uy:443/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=INECenso:Localidades_pg"),
c("Asentamientos irregulares", "PMB", "MIDES", 32721, "wfs", 2014,
"https://mapas.mides.gub.uy:443/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=IDE:ai_pmb_2014"),
c("Balnearios", "MTOP", "MTOP", 4326, "wfs", 2017,
"https://geoservicios.mtop.gub.uy/geoserver/mb_planos/v_balnearios/ows?service=WFS&request=GetFeature&typeName=v_balnearios"),
c("Departamentos", "IDE", "MIDES", 32721, "wfs", 2011,
"https://testmapas.mides.gub.uy/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=IDE:Departamentos%20UY")
), stringsAsFactors = FALSE)
names(metadata) <- c("capa","productor","repositor","crs","formato","anio","url")
metadata %<>% mutate(crs = as.numeric(crs), anio = as.nimeric(anio))
metadata %<>% mutate(crs = as.numeric(crs), anio = as.numeric(anio))
saveRDS(metadata,"data-raw/metadata.Rds")
x <- GeoUy::metadata
devtools::use_data_raw()
usethis::use_data_raw(metadata)
usethis::use_data_raw("metadata")
usethis::use_data_raw()
usethis::use_data("metadata")
usethis::use_data(metadata)
x <- GeoUy::metadata
library(GeoUy)
capa = "Secciones"
x <- GeoUy::metadata[capa = capa,]
x <- GeoUy::metadata %>% filter(capa = capa)
x <- GeoUy::metadata %>% filter(capa == capa)
View(x)
c = "Secciones"
x <- GeoUy::metadata %>%
filter(capa == c)
st_read(x$url[1], crs = x$crs[1]) %>%
st_transform(crs)
load_geouy <- function(c, crs = 32721){
x <- GeoUy::metadata %>%
filter(capa == c)
st_read(x$url[1], crs = x$crs[1]) %>%
st_transform(crs)
}
secc <- load_geouy(c = "Secciones")
# Download shape files
d <- load_geouy("Departamentos", "INECenso")
library(GeoUy)
# Download shape files
d <- load_geouy("Departamentos", "INECenso")
View(metadata)
# Download shape files
d <- load_geouy("Departamentos")
s <- load_geouy("Secciones")
# Simplify geometry
d_s <- st_simplify(d, preserveTopology = TRUE, dTolerance = .1)
s_s <- st_simplify(s, preserveTopology = TRUE, dTolerance = .1)
plot(d_s['code_d'])
plot(d_s['depto'])
plot(d['depto'])
plot(s_s['CODSEC'])
plot(s['CODSEC'])
as.numeric(object.size(d_s)) / as.numeric(  object.size(d))
as.numeric(object.size(s_s)) / as.numeric(  object.size(s))
### .png
plot_a <-
ggplot() +
geom_sf(data = d_s, fill = NA, size = .155, color = "#4dc0d1") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#ededed") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -67.7, y = -20, label = "GeoUy", color = "black",
size = 25, family = "Roboto", fontface = "bold", angle = 0) # (.png  size = 25)(.svg  size = 6)
plot_a
sticker(plot_a, package = "",
s_x = 1.12, s_y = .9, s_width = 1.8, s_height = 1.8, # ggplot image size and position
h_fill = "#FEB845", h_color = "#eaf252", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
beepr::beep()
ggplot() +
geom_sf(data = d_s, fill = NA, size = .155, color = "#ededed")
plot_a <-
ggplot() +
geom_sf(data = s_s, fill = NA, color = "#ededed")
ggplot() +
geom_sf(data = s_s, fill = NA, size = .8, color = "#ededed")
ggplot() +
geom_sf(data = s_s, fill = NA, size = .4, color = "#ededed")
ggplot() +
geom_sf(data = s_s, fill = NA, size = .4, color = "#ededed") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1")
### .png
plot_a <-
ggplot() +
# geom_sf(data = s_s, fill = NA, size = .4, color = "#ededed") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -57.7, y = -33, label = "GeoUy", color = "black",
size = 25, family = "Roboto", fontface = "bold", angle = 0) # (.png  size = 25)(.svg  size = 6)
plot_a
### .png
plot_a <-
ggplot() +
# geom_sf(data = s_s, fill = NA, size = .4, color = "#ededed") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = 57.7, y = 33, label = "GeoUy", color = "black",
size = 5, family = "Roboto", fontface = "bold", angle = 0) # (.png  size = 25)(.svg  size = 6)
plot_a
plot_a <-
ggplot() +
# geom_sf(data = s_s, fill = NA, size = .4, color = "#ededed") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent"))
plot_a
ggplot() +
# geom_sf(data = s_s, fill = NA, size = .4, color = "#ededed") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1")
### .png
plot_a <-
ggplot() +
# geom_sf(data = s_s, fill = NA, size = .4, color = "#ededed") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = 33, y = 57.7, label = "GeoUy", color = "black",
size = 5, family = "Roboto", fontface = "bold", angle = 0) # (.png  size = 25)(.svg  size = 6)
plot_a
s <- load_geouy("Secciones", crs = 4326)
s_s <- st_simplify(s, preserveTopology = TRUE, dTolerance = .1)
plot(s_s['CODSEC'])
plot(s['CODSEC'])
as.numeric(object.size(s_s)) / as.numeric(  object.size(s))
### .png
plot_a <-
ggplot() +
# geom_sf(data = s_s, fill = NA, size = .4, color = "#ededed") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = 33, y = 57.7, label = "GeoUy", color = "black",
size = 5, family = "Roboto", fontface = "bold", angle = 0) # (.png  size = 25)(.svg  size = 6)
plot_a
### .png
plot_a <-
ggplot() +
# geom_sf(data = s_s, fill = NA, size = .4, color = "#ededed") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -57.7, y = -33, label = "GeoUy", color = "black",
size = 5, family = "Roboto", fontface = "bold", angle = 0) # (.png  size = 25)(.svg  size = 6)
plot_a
s_s <- st_simplify(s, preserveTopology = TRUE, dTolerance = .5)
plot(s_s['CODSEC'])
s_s <- st_simplify(s, preserveTopology = TRUE, dTolerance = .8)
plot(s_s['CODSEC'])
s_s <- st_simplify(s, preserveTopology = TRUE, dTolerance = .01)
plot(s_s['CODSEC'])
as.numeric(object.size(s_s)) / as.numeric(  object.size(s))
### .png
plot_a <-
ggplot() +
# geom_sf(data = s_s, fill = NA, size = .4, color = "#ededed") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -57.7, y = -33, label = "GeoUy", color = "black",
size = 5, family = "Roboto", fontface = "bold", angle = 0) # (.png  size = 25)(.svg  size = 6)
plot_a
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#ededed") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -57.7, y = -33, label = "GeoUy", color = "black",
size = 25, family = "Roboto", fontface = "bold", angle = 0) # (.png  size = 25)(.svg  size = 6)
plot_a
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#ededed") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -56, y = -33, label = "GeoUy", color = "black",
size = 25, family = "Roboto", fontface = "bold", angle = 30) # (.png  size = 25)(.svg  size = 6)
plot_a
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -56, y = -33, label = "GeoUy", color = "#5796c9",
size = 25, family = "Roboto", fontface = "bold", angle = 30) # (.png  size = 25)(.svg  size = 6)
plot_a
sticker(plot_a, package = "",
s_x = 1.12, s_y = .9, s_width = 1.8, s_height = 1.8, # ggplot image size and position
h_fill = "#FEB845", h_color = "#f5f1ed", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -56, y = -33, label = "GeoUy", color = "#5796c9",
size = 35, family = "Roboto", fontface = "bold", angle = 30) # (.png  size = 25)(.svg  size = 6)
sticker(plot_a, package = "",
s_x = 1.12, s_y = .9, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -56, y = -33, label = "GeoUy", color = "#5796c9",
size = 35, family = "Roboto", fontface = "bold", angle = 30) # (.png  size = 25)(.svg  size = 6)
sticker(plot_a, package = "",
s_x = .9, s_y = .9, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905")
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -54, y = -31, label = "GeoUy", color = "#5796c9",
size = 35, family = "Roboto", fontface = "bold", angle = 0) # (.png  size = 25)(.svg  size = 6)
sticker(plot_a, package = "",
s_x = .9, s_y = .9, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
beepr::beep()
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -54, y = -31, label = "GeoUy", color = "#5796c9",
size = 35, family = "Roboto", fontface = "bold", angle = -30) # (.png  size = 25)(.svg  size = 6)
sticker(plot_a, package = "",
s_x = .9, s_y = .9, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -54, y = -31, label = "GeoUy", color = "#5796c9",
size = 25, family = "Roboto", fontface = "bold", angle = -30) # (.png  size = 25)(.svg  size = 6)
sticker(plot_a, package = "",
s_x = .9, s_y = .9, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -54.5, y = -31, label = "GeoUy", color = "#5796c9",
size = 25, family = "Roboto", fontface = "bold", angle = -35) # (.png  size = 25)(.svg  size = 6)
sticker(plot_a, package = "",
s_x = .9, s_y = .9, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
sticker(plot_a, package = "",
s_x = .9, s_y = 1.5, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
sticker(plot_a, package = "",
s_x = 1, s_y = 1, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
sticker(plot_a, package = "",
s_x = 1.2, s_y = 1, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
sticker(plot_a, package = "",
s_x = 1.03, s_y = 1, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -54.7, y = -31.5, label = "GeoUy", color = "#5796c9",
size = 25, family = "Roboto", fontface = "bold", angle = -35) # (.png  size = 25)(.svg  size = 6)
sticker(plot_a, package = "",
s_x = 1.03, s_y = 1, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -54.7, y = -30.5, label = "GeoUy", color = "#5796c9",
size = 25, family = "Roboto", fontface = "bold", angle = -35) # (.png  size = 25)(.svg  size = 6)
sticker(plot_a, package = "",
s_x = 1.03, s_y = 1, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -54.7, y = -30.7, label = "GeoUy", color = "#5796c9",
size = 25, family = "Roboto", fontface = "bold", angle = -35) # (.png  size = 25)(.svg  size = 6)
sticker(plot_a, package = "",
s_x = 1.03, s_y = 1, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -54.6, y = -30.7, label = "GeoUy", color = "#5796c9",
size = 25, family = "Roboto", fontface = "bold", angle = -35) # (.png  size = 25)(.svg  size = 6)
sticker(plot_a, package = "",
s_x = 1.03, s_y = 1, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -54.7, y = -30.8, label = "GeoUy", color = "#5796c9",
size = 25, family = "Roboto", fontface = "bold", angle = -35) # (.png  size = 25)(.svg  size = 6)
sticker(plot_a, package = "",
s_x = 1.03, s_y = 1, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -54.7, y = -30.8, label = "GeoUy", color = "#5796c9",
size = 25, fontface = "bold", angle = -35) # (.png  size = 25)(.svg  size = 6)
sticker(plot_a, package = "",
s_x = 1.03, s_y = 1, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "#e6eaed", h_color = "#f2f266", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
sticker(plot_a, package = "",
s_x = 1.03, s_y = 1, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "black", h_color = "black", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -54.7, y = -30.8, label = "GeoUy", color = "#4dc0d1",
size = 25, fontface = "bold", angle = -35) # (.png  size = 25)(.svg  size = 6)
sticker(plot_a, package = "",
s_x = 1.03, s_y = 1, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "black", h_color = "black", # hexagon
filename = "./man/figures/GeoUy_logo_a.png", dpi = 400)  # output name and resolution
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .4, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -54.7, y = -30.8, label = "geouy", color = "#4dc0d1",
size = 25, fontface = "bold", angle = -35) # (.png  size = 25)(.svg  size = 6)
sticker(plot_a, package = "",
s_x = 1.03, s_y = 1, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "black", h_color = "black", # hexagon
filename = "./man/figures/geouy_logo_a.png", dpi = 400)  # output name and resolution
### .png
plot_a <-
ggplot() +
geom_sf(data = s, fill = NA, size = .3, color = "#5796c905") +
geom_sf(data = s_s, fill = NA, size = .2, color = "#4dc0d1") +
theme_void() +
theme(panel.grid.major = element_line(colour = "transparent")) +
#  theme(legend.position = "none") +
annotate("text", x = -54.7, y = -30.8, label = "geouy", color = "#4dc0d1",
size = 25, fontface = "bold", angle = -35) # (.png  size = 25)(.svg  size = 6)
sticker(plot_a, package = "",
s_x = 1.03, s_y = 1, s_width = 1.5, s_height = 1.5, # ggplot image size and position
h_fill = "black", h_color = "black", # hexagon
filename = "./man/figures/geouy_logo_a.png", dpi = 400)  # output name and resolution
x <- geouy::metadata
library(geouy)
x <- geouy::metadata
x$url[x$capa == c, 1]
x$url[x$capa == c]
c = "Secciones"
x$url[x$capa == c, 1]
x$url[x$capa == c]
