geom_sf(aes(fill = a)) +
scale_fill_gradientn(colors = terrain.colors(20)) +
# scale_fill_viridis_c(option = viri_opt, trans = viri_tran) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12),
panel.background = element_blank(),
panel.border = element_rect(colour = "gray", fill = NA, size = 0.5),
legend.justification = c(1,1), legend.position = c(1,1)) +
ggsn::north(x, location = "bottomleft", symbol = 3) +
ggsn::scalebar(x, dist = 50, dist_unit = "km", transform = T, model = "WGS84")
plot_geouy <- function(x, a, viri_opt = "plasma", viri_tran = "sqrt", ...){
arguments <- as.list(match.call())
a = eval(arguments$a, x)
# a <- enquo(a)
ggplot(data = x) +
geom_sf(aes(fill = a)) +
scale_fill_gradientn(colors = terrain.colors(20)) +
# scale_fill_viridis_c(option = viri_opt, trans = viri_tran) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12),
panel.background = element_blank(),
panel.border = element_rect(colour = "gray", fill = NA, size = 0.5),
legend.justification = c(1,1), legend.position = c(1,1)) +
ggsn::north(x, location = "bottomleft", symbol = 3) +
ggsn::scalebar(x, dist = 50, dist_unit = "km", transform = T, model = "WGS84")
}
plot_geouy(secc,"AREA")
ggplot(data = x) +
geom_sf(aes(fill = !!a_name)) +
scale_fill_gradientn(colors = terrain.colors(20)) +
# scale_fill_viridis_c(option = viri_opt, trans = viri_tran) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12),
panel.background = element_blank(),
panel.border = element_rect(colour = "gray", fill = NA, size = 0.5),
legend.justification = c(1,1), legend.position = c(1,1)) +
ggsn::north(x, location = "bottomleft", symbol = 3) +
ggsn::scalebar(x, dist = 50, dist_unit = "km", transform = T, model = "WGS84")
plot_geouy <- function(x, a, viri_opt = "plasma", viri_tran = "sqrt", ...){
a <- enquo(a)
a_name <- quo_name(a)
ggplot(data = x) +
geom_sf(aes(fill = !!a_name)) +
scale_fill_gradientn(colors = terrain.colors(20)) +
# scale_fill_viridis_c(option = viri_opt, trans = viri_tran) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12),
panel.background = element_blank(),
panel.border = element_rect(colour = "gray", fill = NA, size = 0.5),
legend.justification = c(1,1), legend.position = c(1,1)) +
ggsn::north(x, location = "bottomleft", symbol = 3) +
ggsn::scalebar(x, dist = 50, dist_unit = "km", transform = T, model = "WGS84")
}
plot_geouy(secc,"AREA")
secc <- load_geouy("Secciones")
plot_geouy(secc,"AREA")
a="AREA"
a <- enquo(a)
a_name <- quo_name(a)
plot_geouy <- function(x, a, viri_opt = "plasma", viri_tran = "sqrt", ...){
a <- enquo(a)
a_name <- quo_name(a)
ggplot(data = x) +
geom_sf(aes(fill = !!sym(a_name))) +
scale_fill_gradientn(colors = terrain.colors(20)) +
# scale_fill_viridis_c(option = viri_opt, trans = viri_tran) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12),
panel.background = element_blank(),
panel.border = element_rect(colour = "gray", fill = NA, size = 0.5),
legend.justification = c(1,1), legend.position = c(1,1)) +
ggsn::north(x, location = "bottomleft", symbol = 3) +
ggsn::scalebar(x, dist = 50, dist_unit = "km", transform = T, model = "WGS84")
}
plot_geouy(secc,"AREA")
plot_geouy <- function(x, a, viri_opt = "plasma", viri_tran = "sqrt", ...){
a <- enquo(a)
a_name <- quo_name(a)
ggplot(data = x) +
geom_sf(aes(fill = !!sym(a_name))) +
scale_fill_viridis_c(option = viri_opt, trans = viri_tran) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12),
panel.background = element_blank(),
panel.border = element_rect(colour = "gray", fill = NA, size = 0.5),
legend.justification = c(1,1), legend.position = c(1,1)) +
ggsn::north(x, location = "bottomleft", symbol = 3) +
ggsn::scalebar(x, dist = 50, dist_unit = "km", transform = T, model = "WGS84")
}
plot_geouy(secc,"AREA")
plot_geouy <- function(x, a, viri_opt = "plasma", ...){
a <- enquo(a)
a_name <- quo_name(a)
ggplot(data = x) +
geom_sf(aes(fill = !!sym(a_name))) +
scale_fill_viridis_c(option = viri_opt) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12),
panel.background = element_blank(),
panel.border = element_rect(colour = "gray", fill = NA, size = 0.5),
legend.justification = c(1,1), legend.position = c(1,1)) +
ggsn::north(x, location = "bottomleft", symbol = 3) +
ggsn::scalebar(x, dist = 50, dist_unit = "km", transform = T, model = "WGS84")
}
plot_geouy(secc,"AREA")
library(geouy)
document()
devtools::document()
library("roxygen2", lib.loc="~/R/R-3.4.3/library")
roxygenize()
install.packages("fansi")
x <- data.frame(cbind(dpto = "Montevideo",
loc = "Montevideo",
dir = "Av. 18 de julio 1453"),
stringsAsFactors = F)
x1 <- geocode_ide_uy(x)
geocode_ide_uy <- function(x) {
stopifnot(is.data.frame(x))
stopifnot(is.character(x$dpto), "dpto" %in% colnames(x), length(x$dpto) >= 1)
stopifnot(is.character(x$loc), "loc" %in% colnames(x))
stopifnot(is.character(x$dir), "dir" %in% colnames(x))
x <- x %>% mutate(dir = str_trim(dir)) %>% filter(nchar(dir) > 0)
for (i in 1:nrow(x)) {
p <- suppressWarnings(read_html(str_replace_all(paste0("http://servicios.ide.gub.uy/servicios/BusquedaDireccion?departamento=",
x[i,"dpto"] , "&localidad=", x[i,"loc"], "&calle=", x[i,"dir"])," ","%20")))
if (length(p) == 0) {
next
}
x[i,"x"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoX\":")[2] + 1, str_locate(p, "puntoX\":")[2] + 10)))
x[i,"y"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoY\":")[2] + 1, str_locate(p, "puntoY\":")[2] + 10)))
p <- NULL
}
return(x)
}
x1 <- geocode_ide_uy(x)
library(dplyr)
library(xml2)
library(stringr)
x1 <- geocode_ide_uy(x)
a <- load_geouy("Secciones", crs = 4326)
library(geouy)
a <- load_geouy("Secciones", crs = 4326)
a1 <- sf::st_crs(a)
a1[1]
a1[1] == 4326
library(testthat)
test_that("connections working", {
expect_is(load_geouy("Secciones"), "sf")
expect_is(load_geouy("Rutas"), "sf")
expect_is(load_geouy("Peajes"), "sf")
a <- load_geouy("Secciones", crs = 4326)
a1 <- sf::st_crs(a)
expect_equal(a1[1], 4326)
a <- load_geouy("Secciones", crs = 32721)
a1 <- sf::st_crs(a)
expect_equal(a1[1], 32721)
})
dput(a1)
dput(a1[1])
test_that("connections working", {
expect_is(load_geouy("Secciones"), "sf")
expect_is(load_geouy("Rutas"), "sf")
expect_is(load_geouy("Peajes"), "sf")
a <- load_geouy("Secciones", crs = 4326)
a1 <- sf::st_crs(a)
expect_equal(a1[1], structure(list(epsg = 4326L), .Names = "epsg"))
a <- load_geouy("Secciones", crs = 32721)
a1 <- sf::st_crs(a)
expect_equal(a1[1], 32721)
})
test_that("connections working", {
suppressMessages(expect_is(load_geouy("Secciones"), "sf"))
expect_is(load_geouy("Rutas"), "sf")
expect_is(load_geouy("Peajes"), "sf")
a <- load_geouy("Secciones", crs = 4326)
a1 <- sf::st_crs(a)
expect_equal(a1[1], structure(list(epsg = 4326L), .Names = "epsg"))
a <- load_geouy("Secciones", crs = 32721)
a1 <- sf::st_crs(a)
expect_equal(a1[1], structure(list(epsg = 32721L), .Names = "epsg"))
})
expect_is(suppressMessages(load_geouy("Secciones"), "sf"))
x <- data.frame(cbind(dpto = "Montevideo",
loc = "Montevideo",
dir = "Av. 18 de julio 1453"),
stringsAsFactors = F)
x1 <- geocode_ide_uy(x)
dput(x1)
dput(x1[4])
dput(x1[5])
test_that("connection to IDE server working", {
x <- data.frame(cbind(dpto = "Montevideo",
loc = "Montevideo",
dir = "Av. 18 de julio 1453"),
stringsAsFactors = F)
x1 <- geocode_ide_uy(x)
expect_equal(x1[4], structure(list(x = -56.184901), .Names = "x", row.names = c(NA, -1L), class = "data.frame"))
expect_equal(x1[5], structure(list(y = -34.905193), .Names = "y", row.names = c(NA, -1L), class = "data.frame"))
})
x <- data.frame(cbind(dpto = "Montevideo",
loc = "Montevideo",
dir = "Av. 18 de julio 1453"),
stringsAsFactors = F)
x1 <- geocode_ide_uy(x)
expect_equal(x1[4], structure(list(x = -56.184901), .Names = "x", row.names = c(NA, -1L), class = "data.frame"))
expect_equal(x1[5], structure(list(y = -34.905193), .Names = "y", row.names = c(NA, -1L), class = "data.frame"))
secc <- load_geouy("Secciones")
plot_geouy(x = secc, a = "AREA")
aaa <- plot_geouy(x = secc, a = "AREA")
class(aaa)
expect_is(aaa, "ggplot")
test_that("Plot uses correct data", {
p <- plot_geouy(secc)
expect_that(secc, equals(p$data))
})
x <- geouy::metadata
expect_equal(ncol(x), 7)
expect_is(x$capa, "character")
expect_is(x$productor, "character")
expect_is(x$repositor, "character")
expect_is(x$crs, "numeric")
expect_is(x$formato, "character")
expect_is(x$anio, "numeric")
expect_is(x$url, "character")
expect_equal(unique(x$crs), c(4326,32721))
expect_condition(unique(x$crs) %in% c(4326,32721))
expect_true(unique(x$crs) %in% c(4326,32721))
unique(x$crs) %in% c(4326,32721)
expect_true(unique(x$crs) %in% 4326))
expect_true(unique(x$crs) %in% 4326)
expect_true(4326 %in% unique(x$crs))
unicque(c(2,3))
unique(c(2,3))
unique(c(3,2))
expect_equal(unique(x$crs), c(4326, 32721) | c(32721, 4326) )
expect_equal(lenght(unique(x$crs)), 2)
expect_equal(length(unique(x$crs)), 2)
test_that("connection to IDE server working", {
x <- data.frame(cbind(dpto = "Montevideo",
loc = "Montevideo",
dir = "Av. 18 de julio 1453"),
stringsAsFactors = F)
x1 <- geocode_ide_uy(x)
expect_equal(x1[4], structure(list(x = -56.184901), .Names = "x", row.names = c(NA, -1L), class = "data.frame"))
expect_equal(x1[5], structure(list(y = -34.905193), .Names = "y", row.names = c(NA, -1L), class = "data.frame"))
})
library(testthat)
test_that("connection to IDE server working", {
x <- data.frame(cbind(dpto = "Montevideo",
loc = "Montevideo",
dir = "Av. 18 de julio 1453"),
stringsAsFactors = F)
x1 <- geocode_ide_uy(x)
expect_equal(x1[4], structure(list(x = -56.184901), .Names = "x", row.names = c(NA, -1L), class = "data.frame"))
expect_equal(x1[5], structure(list(y = -34.905193), .Names = "y", row.names = c(NA, -1L), class = "data.frame"))
})
test_that("connection to IDE server working", {
x <- data.frame(cbind(dpto = "Montevideo",
loc = "Montevideo",
dir = "Av. 18 de julio 1453"),
stringsAsFactors = F)
x1 <- geocode_ide_uy(x)
expect_equal(x1[4], structure(list(x = -56.184901), .Names = "x", row.names = c(NA, -1L), class = "data.frame"))
expect_equal(x1[5], structure(list(y = -34.905193), .Names = "y", row.names = c(NA, -1L), class = "data.frame"))
})
# librerias
library(ggsn); library(foreign); library(stringr); library(RPostgreSQL) library(RPostgres); library(RColorBrewer); library(dplyr); library(tidyr)
x <- data.frame(cbind(dpto = "Montevideo",
loc = "Montevideo",
dir = "Av. 18 de julio 1453"),
stringsAsFactors = F)
library(geouy)
x1 <- geocode_ide_uy(x)
expect_equal(x1[4], structure(list(x = -56.184901), .Names = "x", row.names = c(NA, -1L), class = "data.frame"))
expect_equal(x1[5], structure(list(y = -34.905193), .Names = "y", row.names = c(NA, -1L), class = "data.frame"))
x <- data.frame(cbind(dpto = c("Montevideo", "Montevideo"),
loc = c("Montevideo", "Montevideo"),
dir = c("Av. 18 de julio 1", "Av. 18 de julio 1453")),
stringsAsFactors = F)
x1 <- geocode_ide_uy(x)
for (i in 1:nrow(x)) {
p <- suppressWarnings(read_html(str_replace_all(paste0("http://servicios.ide.gub.uy/servicios/BusquedaDireccion?departamento=",
x[i,"dpto"] , "&localidad=", x[i,"loc"], "&calle=", x[i,"dir"])," ","%20")))
if (length(p) == 0) {
next
}
for (i in 1:nrow(x)) {
p <- suppressWarnings(xml2::read_html(str_replace_all(paste0("http://servicios.ide.gub.uy/servicios/BusquedaDireccion?departamento=",
x[i,"dpto"] , "&localidad=", x[i,"loc"], "&calle=", x[i,"dir"])," ","%20")))
if (length(p) == 0) {
next
}}
p <- suppressWarnings(xml2::read_html(str_replace_all(paste0("http://servicios.ide.gub.uy/servicios/BusquedaDireccion?departamento=",
x[i,"dpto"] , "&localidad=", x[i,"loc"], "&calle=", x[i,"dir"])," ","%20")))
p
str_replace_all(paste0("http://servicios.ide.gub.uy/servicios/BusquedaDireccion?departamento=",x[i,"dpto"] , "&localidad=", x[i,"loc"], "&calle=", x[i,"dir"])," ","%20")
geocode_ide_uy <- function(x) {
stopifnot(is.data.frame(x))
stopifnot(is.character(x$dpto), "dpto" %in% colnames(x), length(x$dpto) >= 1)
stopifnot(is.character(x$loc), "loc" %in% colnames(x))
stopifnot(is.character(x$dir), "dir" %in% colnames(x))
x <- x %>% mutate(dir = str_trim(dir)) %>% filter(nchar(dir) > 0)
for (i in 1:nrow(x)) {
p <- suppressWarnings(xml2::read_html(str_replace_all(paste0("http://servicios.ide.gub.uy/servicios/BusquedaDireccion?departamento=",
x[i,"dpto"] , "&localidad=", x[i,"loc"], "&calle=", x[i,"dir"])," ","%20")))
# if (length(p) == 0) {
#   next
# }
x[i,"x"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoX\":")[2] + 1, str_locate(p, "puntoX\":")[2] + 10)))
x[i,"y"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoY\":")[2] + 1, str_locate(p, "puntoY\":")[2] + 10)))
p <- NULL
}
return(x)
}
x1 <- geocode_ide_uy(x)
library(dplyr)
library(stringr)
x1 <- geocode_ide_uy(x)
p <- suppressWarnings(xml2::read_html(str_replace_all(paste0("http://servicios.ide.gub.uy/servicios/BusquedaDireccion?departamento=",
x[i,"dpto"] , "&localidad=", x[i,"loc"], "&calle=", x[i,"dir"])," ","%20"),
encoding = "", ..., as_html = FALSE,
options = "NOBLANKS"))
geocode_ide_uy <- function(x) {
stopifnot(is.data.frame(x))
stopifnot(is.character(x$dpto), "dpto" %in% colnames(x), length(x$dpto) >= 1)
stopifnot(is.character(x$loc), "loc" %in% colnames(x))
stopifnot(is.character(x$dir), "dir" %in% colnames(x))
x <- x %>% mutate(dir = str_trim(dir)) %>% filter(nchar(dir) > 0)
for (i in 1:nrow(x)) {
p <- suppressWarnings(xml2::read_html(str_replace_all(paste0("http://servicios.ide.gub.uy/servicios/BusquedaDireccion?departamento=",
x[i,"dpto"] , "&localidad=", x[i,"loc"], "&calle=", x[i,"dir"])," ","%20"),
encoding = "", ..., as_html = FALSE,
options = "NOBLANKS"))
# if (length(p) == 0) {
#   next
# }
x[i,"x"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoX\":")[2] + 1, str_locate(p, "puntoX\":")[2] + 10)))
x[i,"y"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoY\":")[2] + 1, str_locate(p, "puntoY\":")[2] + 10)))
p <- NULL
}
return(x)
}
x1 <- geocode_ide_uy(x)
geocode_ide_uy <- function(x) {
stopifnot(is.data.frame(x))
stopifnot(is.character(x$dpto), "dpto" %in% colnames(x), length(x$dpto) >= 1)
stopifnot(is.character(x$loc), "loc" %in% colnames(x))
stopifnot(is.character(x$dir), "dir" %in% colnames(x))
x <- x %>% mutate(dir = str_trim(dir)) %>% filter(nchar(dir) > 0)
for (i in 1:nrow(x)) {
p <- suppressWarnings(xml2::read_html(str_replace_all(paste0("http://servicios.ide.gub.uy/servicios/BusquedaDireccion?departamento=",
x[i,"dpto"] , "&localidad=", x[i,"loc"], "&calle=", x[i,"dir"])," ","%20"),
encoding = "", as_html = FALSE, options = "NOBLANKS"))
# if (length(p) == 0) {
#   next
# }
x[i,"x"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoX\":")[2] + 1, str_locate(p, "puntoX\":")[2] + 10)))
x[i,"y"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoY\":")[2] + 1, str_locate(p, "puntoY\":")[2] + 10)))
p <- NULL
}
return(x)
}
x1 <- geocode_ide_uy(x)
geocode_ide_uy <- function(x) {
stopifnot(is.data.frame(x))
stopifnot(is.character(x$dpto), "dpto" %in% colnames(x), length(x$dpto) >= 1)
stopifnot(is.character(x$loc), "loc" %in% colnames(x))
stopifnot(is.character(x$dir), "dir" %in% colnames(x))
x <- x %>% mutate(dir = str_trim(dir)) %>% filter(nchar(dir) > 0)
for (i in 1:nrow(x)) {
p <- suppressWarnings(xml2::read_html(str_replace_all(paste0("http://servicios.ide.gub.uy/servicios/BusquedaDireccion?departamento=",
x[i,"dpto"] , "&localidad=", x[i,"loc"], "&calle=", x[i,"dir"])," ","%20"),
encoding = "", options = "NOBLANKS"))
# if (length(p) == 0) {
#   next
# }
x[i,"x"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoX\":")[2] + 1, str_locate(p, "puntoX\":")[2] + 10)))
x[i,"y"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoY\":")[2] + 1, str_locate(p, "puntoY\":")[2] + 10)))
p <- NULL
}
return(x)
}
geocode_ide_uy <- function(x) {
stopifnot(is.data.frame(x))
stopifnot(is.character(x$dpto), "dpto" %in% colnames(x), length(x$dpto) >= 1)
stopifnot(is.character(x$loc), "loc" %in% colnames(x))
stopifnot(is.character(x$dir), "dir" %in% colnames(x))
x <- x %>% mutate(dir = str_trim(dir)) %>% filter(nchar(dir) > 0)
for (i in 1:nrow(x)) {
p <- suppressWarnings(xml2::read_html(str_replace_all(paste0("http://servicios.ide.gub.uy/servicios/BusquedaDireccion?departamento=",
x[i,"dpto"] , "&localidad=", x[i,"loc"], "&calle=", x[i,"dir"])," ","%20"),
encoding = "", options = "NOBLANKS"))
# if (length(p) == 0) {
#   next
# }
x[i,"x"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoX\":")[2] + 1, str_locate(p, "puntoX\":")[2] + 10)))
x[i,"y"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoY\":")[2] + 1, str_locate(p, "puntoY\":")[2] + 10)))
p <- NULL
}
return(x)
}
x1 <- geocode_ide_uy(x)
geocode_ide_uy <- function(x) {
stopifnot(is.data.frame(x))
stopifnot(is.character(x$dpto), "dpto" %in% colnames(x), length(x$dpto) >= 1)
stopifnot(is.character(x$loc), "loc" %in% colnames(x))
stopifnot(is.character(x$dir), "dir" %in% colnames(x))
x <- x %>% mutate(dir = str_trim(dir)) %>% filter(nchar(dir) > 0)
for (i in 1:nrow(x)) {
p <- suppressWarnings(xml2::read_html(str_replace_all(paste0("RAW:http://servicios.ide.gub.uy/servicios/BusquedaDireccion?departamento=",
x[i,"dpto"] , "&localidad=", x[i,"loc"], "&calle=", x[i,"dir"])," ","%20"),
encoding = "", options = c("NOBLANKS", "NOERROR"), n = 256))
# if (length(p) == 0) {
#   next
# }
x[i,"x"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoX\":")[2] + 1, str_locate(p, "puntoX\":")[2] + 10)))
x[i,"y"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoY\":")[2] + 1, str_locate(p, "puntoY\":")[2] + 10)))
p <- NULL
}
return(x)
}
x1 <- geocode_ide_uy(x)
xml2::read_html(str_replace_all(paste0("http://servicios.ide.gub.uy/servicios/BusquedaDireccion?departamento=",
x[i,"dpto"] , "&localidad=", x[i,"loc"], "&calle=", x[i,"dir"])," ","%20"),
encoding = "", options = c("NOBLANKS", "NOERROR"), n = 256)
geocode_ide_uy <- function(x) {
stopifnot(is.data.frame(x))
stopifnot(is.character(x$dpto), "dpto" %in% colnames(x), length(x$dpto) >= 1)
stopifnot(is.character(x$loc), "loc" %in% colnames(x))
stopifnot(is.character(x$dir), "dir" %in% colnames(x))
x <- x %>% mutate(dir = str_trim(dir)) %>% filter(nchar(dir) > 0)
for (i in 1:nrow(x)) {
p <- suppressWarnings(xml2::read_html(str_replace_all(paste0("http://servicios.ide.gub.uy/servicios/BusquedaDireccion?departamento=",
x[i,"dpto"] , "&localidad=", x[i,"loc"], "&calle=", x[i,"dir"])," ","%20"),
encoding = "UTF-8", options = c("NOBLANKS", "NOERROR"), n = 256))
# if (length(p) == 0) {
#   next
# }
x[i,"x"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoX\":")[2] + 1, str_locate(p, "puntoX\":")[2] + 10)))
x[i,"y"] <- suppressWarnings(as.numeric(str_sub(p, str_locate(p, "puntoY\":")[2] + 1, str_locate(p, "puntoY\":")[2] + 10)))
p <- NULL
}
return(x)
}
x1 <- geocode_ide_uy(x)
test_that("connection to IDE server working", {
x <- data.frame(cbind(dpto = c("Montevideo", "Montevideo"),
loc = c("Montevideo", "Montevideo"),
dir = c("Av. 18 de julio 1", "Av. 18 de julio 1453")),
stringsAsFactors = F)
x1 <- geocode_ide_uy(x)
expect_equal(x1[4], structure(list(x = -56.184901), .Names = "x", row.names = c(NA, -1L), class = "data.frame"))
expect_equal(x1[5], structure(list(y = -34.905193), .Names = "y", row.names = c(NA, -1L), class = "data.frame"))
})
x <- data.frame(cbind(dpto = c("Montevideo", "Montevideo"),
loc = c("Montevideo", "Montevideo"),
dir = c("Av. 18 de julio 1", "Av. 18 de julio 1453")),
stringsAsFactors = F)
x1 <- geocode_ide_uy(x)
source('C:/Users/rdetomasi/Desktop/R/GeoUy/R/geocode_ide_uy.R', echo=TRUE)
x1 <- geocode_ide_uy(x)
test_that("connection to IDE server working", {
x <- data.frame(cbind(dpto = "Montevideo",
loc = "Montevideo",
dir = "Av. 18 de julio 1453"),
stringsAsFactors = F)
x1 <- geocode_ide_uy(x)
expect_equal(x1[4], structure(list(x = -56.184901), .Names = "x", row.names = c(NA, -1L), class = "data.frame"))
expect_equal(x1[5], structure(list(y = -34.905193), .Names = "y", row.names = c(NA, -1L), class = "data.frame"))
})
